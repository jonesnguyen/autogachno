#!/usr/bin/env python3
"""
Test API thuhohpk.com ƒë·ªÉ debug v·∫•n ƒë·ªÅ CORS v√† network
Ch·∫°y: python test_api.py
"""

import requests
import json
from datetime import datetime

def test_api_endpoint():
    """Test API endpoint v·ªõi c√°c service types kh√°c nhau"""
    
    # Base URL
    base_url = "https://thuhohpk.com/api/list-bill-not-completed"
    
    # Basic Authentication t·ª´ Postman collection
    import base64
    username = "Demodiemthu"
    password = "123456"
    credentials = base64.b64encode(f"{username}:{password}".encode()).decode()
    
    headers = {
        'Authorization': f'Basic {credentials}',
        'Content-Type': 'application/json',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
    }
    
    # Service types mapping
    service_types = {
        'tra_cuu_ftth': 'check_ftth',
        'gach_dien_evn': 'env',
        'nap_tien_da_mang': 'deposit',
        'nap_tien_viettel': 'deposit_viettel',
        'thanh_toan_tv_internet': 'payment_tv',
        'tra_cuu_no_tra_sau': 'check_debt'
    }
    
    print(f"üîÑ Testing API: {base_url}")
    print(f"‚è∞ Time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üîê Auth: Basic {username}:{password}")
    print("=" * 60)
    
    for service_name, api_service_type in service_types.items():
        print(f"\nüì° Testing: {service_name} -> {api_service_type}")
        
        try:
            # Test v·ªõi params
            params = {'service_type': api_service_type}
            response = requests.get(
                base_url, 
                params=params, 
                headers=headers, 
                timeout=30
            )
            
            print(f"‚úÖ Status: {response.status_code}")
            print(f"üìä Headers: {dict(response.headers)}")
            
            if response.status_code == 200:
                try:
                    data = response.json()
                    print(f"üìÑ Response: {json.dumps(data, indent=2, ensure_ascii=False)}")
                    
                    # Ki·ªÉm tra format d·ªØ li·ªáu
                    if isinstance(data, dict) and 'data' in data:
                        if isinstance(data['data'], str):
                            codes = data['data'].split(',')
                            print(f"üî¢ Codes count: {len(codes)}")
                            print(f"üìù Sample codes: {codes[:3]}")
                        elif isinstance(data['data'], list):
                            print(f"üî¢ Array length: {len(data['data'])}")
                            print(f"üìù Sample items: {data['data'][:3]}")
                    elif isinstance(data, list):
                        print(f"üî¢ Array length: {len(data)}")
                        print(f"üìù Sample items: {data[:3]}")
                        
                except json.JSONDecodeError as e:
                    print(f"‚ùå JSON decode error: {e}")
                    print(f"üìÑ Raw response: {response.text[:200]}...")
                    
            else:
                print(f"‚ùå Error response: {response.text}")
                
        except requests.exceptions.Timeout:
            print("‚è∞ Timeout error - API kh√¥ng ph·∫£n h·ªìi trong 30 gi√¢y")
        except requests.exceptions.ConnectionError as e:
            print(f"üîå Connection error: {e}")
        except requests.exceptions.RequestException as e:
            print(f"‚ùå Request error: {e}")
        except Exception as e:
            print(f"üí• Unexpected error: {e}")
            
        print("-" * 40)

def test_cors_headers():
    """Test CORS headers"""
    print(f"\nüåê Testing CORS headers...")
    
    try:
        # Test OPTIONS request (preflight)
        response = requests.options(
            "https://thuhohpk.com/api/list-bill-not-completed",
            headers={
                'Origin': 'http://localhost:3000',
                'Access-Control-Request-Method': 'GET',
                'Access-Control-Request-Headers': 'Token,Content-Type'
            },
            timeout=10
        )
        
        print(f"OPTIONS Status: {response.status_code}")
        print(f"CORS Headers: {dict(response.headers)}")
        
    except Exception as e:
        print(f"CORS test error: {e}")

def test_network_connectivity():
    """Test network connectivity c∆° b·∫£n"""
    print(f"\nüåç Testing network connectivity...")
    
    try:
        # Test DNS resolution
        import socket
        host = "thuhohpk.com"
        ip = socket.gethostbyname(host)
        print(f"‚úÖ DNS resolution: {host} -> {ip}")
        
        # Test basic connectivity
        response = requests.get("https://thuhohpk.com", timeout=10)
        print(f"‚úÖ Basic connectivity: {response.status_code}")
        
    except Exception as e:
        print(f"‚ùå Network test error: {e}")

if __name__ == "__main__":
    print("üöÄ Starting API test...")
    
    # Test network connectivity tr∆∞·ªõc
    test_network_connectivity()
    
    # Test CORS headers
    test_cors_headers()
    
    # Test API endpoints
    test_api_endpoint()
    
    print("\n‚ú® Test completed!")
    print("\nüí° Tips:")
    print("- N·∫øu c√≥ l·ªói CORS: API server kh√¥ng cho ph√©p cross-origin requests")
    print("- N·∫øu c√≥ l·ªói network: Ki·ªÉm tra firewall, proxy, ho·∫∑c server down")
    print("- N·∫øu c√≥ l·ªói timeout: Server qu√° t·∫£i ho·∫∑c network ch·∫≠m")
    print("- N·∫øu c√≥ l·ªói auth: Token kh√¥ng h·ª£p l·ªá ho·∫∑c h·∫øt h·∫°n")
